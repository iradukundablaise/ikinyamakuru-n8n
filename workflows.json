{
  "name": "Ikinyamakuru",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -800,
        688
      ],
      "id": "2193b4c9-acb9-4245-a5e3-fb6a80d7f32c",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "url": "={{ $json.API_BASE_URL }}/api/articles?limit=10",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apiKey",
              "value": "={{ $json.API_KEY }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        240,
        752
      ],
      "id": "1cf06fb9-ff8a-4097-b10a-cd9f5e131bc4",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "url": "https://umuseke.rw/wp-json/wp/v2/posts?per_page=10",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        496
      ],
      "id": "e7a15d95-d1b8-475d-82a8-dd7216da0ac8",
      "name": "Scrap umuseke"
    },
    {
      "parameters": {
        "url": "https://inyarwanda.com/config/env",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        752
      ],
      "id": "2fe82198-87b0-4c5e-9f5f-ca1f23c69f31",
      "name": "Inyarwanda API Key"
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        464,
        752
      ],
      "id": "f8f74f41-d8bc-4f25-ad89-41d693203e24",
      "name": "Split Out"
    },
    {
      "parameters": {
        "url": "https://yegob.rw/wp-json/wp/v2/posts?per_page=10",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        240
      ],
      "id": "a099277a-8174-48fc-856f-c9f8a6db19e0",
      "name": "Scrap yegob"
    },
    {
      "parameters": {
        "url": "https://www.kigalitoday.com/amakuru/",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        0
      ],
      "id": "09885936-c1d5-47f2-8dd7-6674ff43fee6",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fa26fe91-1cec-416a-86c2-ad12980ec8d8",
              "name": "title",
              "value": "={{ $json.title }}",
              "type": "string"
            },
            {
              "id": "67b3ffc8-c465-4ee3-88c4-002534dc5b31",
              "name": "link",
              "value": "=https://www.kigalitoday.com/{{ $json.link }}",
              "type": "string"
            },
            {
              "id": "16a282e9-86d9-490e-b6dd-1adb269308fb",
              "name": "image",
              "value": "=https://www.kigalitoday.com/{{ $json.image }}",
              "type": "string"
            },
            {
              "id": "6f6c7a72-90db-4d61-a144-a8ebfec1888c",
              "name": "summary",
              "value": "={{ $json.summary }}",
              "type": "string"
            },
            {
              "id": "baa6fa69-ad3c-46b7-9278-47f81c9b882e",
              "name": "source",
              "value": "kigalitoday",
              "type": "string"
            },
            {
              "id": "ca6c87c3-d174-4c14-a927-03bd623288fd",
              "name": "publishedAt",
              "value": "={{ $json.date.replace('|', '').trim() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1072,
        0
      ],
      "id": "596a2310-13e7-47c9-87be-4a4ae6c87876",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6e1cb8d9-bcee-4e15-8e83-fae3f9a69bd6",
              "name": "title",
              "value": "={{ $json.title.rendered }}",
              "type": "string"
            },
            {
              "id": "4fe65a3a-5c83-4755-87b2-df45485cb72b",
              "name": "link",
              "value": "={{ $json.link }}",
              "type": "string"
            },
            {
              "id": "17fa1d27-48d2-46b4-8a19-8175228e6ec8",
              "name": "summary",
              "value": "={{ $json.excerpt.rendered }}",
              "type": "string"
            },
            {
              "id": "ecb65bab-67c7-43fd-93e7-cda2e4d7737b",
              "name": "publishedAt",
              "value": "={{ $json.date }}",
              "type": "string"
            },
            {
              "id": "f502a244-fab2-452b-961a-25516729505b",
              "name": "image",
              "value": "={{ $json.jetpack_featured_media_url }}",
              "type": "string"
            },
            {
              "id": "1290186b-843b-4417-818a-1a5293f84daf",
              "name": "source",
              "value": "={{ $json.source }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1312,
        352
      ],
      "id": "6a2b012e-9528-474a-98f0-5eaafba81d98",
      "name": "Edit Fields1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        832,
        352
      ],
      "id": "7960cc0a-0f7f-44a5-8bc2-5a66e6101be2",
      "name": "Merge"
    },
    {
      "parameters": {
        "keys": {
          "key": [
            {
              "currentKey": "imageUrl",
              "newKey": "image"
            },
            {
              "currentKey": "publishedAt",
              "newKey": "date"
            }
          ]
        },
        "additionalOptions": {}
      },
      "type": "n8n-nodes-base.renameKeys",
      "typeVersion": 1,
      "position": [
        704,
        752
      ],
      "id": "4b2665b3-8977-4a76-94c9-6f0e92bc154e",
      "name": "Rename Keys"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8b20195f-aa09-4270-83f3-fa9533fb3536",
              "name": "link",
              "value": "=https://inyarwanda.com/rw/amakuru/{{ $json.slug }}",
              "type": "string"
            },
            {
              "id": "62cdd40d-0478-4b4a-9c20-c1760d983166",
              "name": "source",
              "value": "inyarwanda",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "include": "except",
        "excludeFields": "_id,featured, lang, slug",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        928,
        752
      ],
      "id": "9d47e453-d449-422c-ba75-d21cebfdd454",
      "name": "Edit Fields4"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "articles",
              "cssSelector": "ul.items.hedSumm li",
              "returnValue": "html",
              "returnArray": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        240,
        0
      ],
      "id": "79897dfd-7037-4ff1-a203-1f1cba6dda1d",
      "name": "extract main HTML"
    },
    {
      "parameters": {
        "fieldToSplitOut": "articles",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        464,
        0
      ],
      "id": "428b4442-d6a1-48d7-9c26-782368909001",
      "name": "extract article items"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "dataPropertyName": "articles",
        "extractionValues": {
          "values": [
            {
              "key": "title",
              "cssSelector": "h3.headline a"
            },
            {
              "key": "link",
              "cssSelector": "h3.headline a",
              "returnValue": "attribute",
              "attribute": "=href"
            },
            {
              "key": "image",
              "cssSelector": ".headline-image img",
              "returnValue": "attribute",
              "attribute": "src"
            },
            {
              "key": "summary",
              "cssSelector": ".summary-container p"
            },
            {
              "key": "date",
              "cssSelector": "span.article_date",
              "returnValue": "=text"
            }
          ]
        },
        "options": {
          "cleanUpText": true
        }
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        848,
        0
      ],
      "id": "92ce865f-6079-42ab-a05a-dcf86a25f960",
      "name": "extract field for each article"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1-nano",
          "mode": "list",
          "cachedResultName": "GPT-4.1-NANO"
        },
        "messages": {
          "values": [
            {
              "content": "=Task: Based on the article’s title, choose one best-fitting category from the list below.\n\nArticle's title: {{ $json.title }}\n\nCategories:\nTechnology, Health, Sports, Entertainment, Politics, Business, Education, Science, Finance, History, Other (if category doesnt fit others)"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2576,
        -160
      ],
      "id": "56500d70-d77d-465f-b578-0eb0c8d42c32",
      "name": "Message a model",
      "credentials": {
        "openAiApi": {
          "id": "YbySeNCDcuBQ0WzK",
          "name": "OpenAi account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "includeOtherFields": true,
        "include": "selected",
        "includeFields": "title, summary",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2336,
        -160
      ],
      "id": "d11725b6-1d8c-4bae-9298-4b396453297e",
      "name": "Edit Fields5"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d15384d6-9882-49f2-ae18-698c32320dc5",
              "name": "category",
              "value": "={{ $json.message.content.category }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3472,
        -176
      ],
      "id": "a5b68f16-e232-4c32-982f-986464704ad0",
      "name": "Edit Fields6"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        4576,
        336
      ],
      "id": "1af6ac62-3306-42d6-adf2-9238f0f29550",
      "name": "Merge2"
    },
    {
      "parameters": {
        "jsCode": "const parseDate = (input) => {\n  const now = new Date();\n\n  const formatDate = (date) => date.toISOString().slice(0, 19) + \"Z\";\n\n  if (typeof input !== 'string' || !input.trim()) {\n    return formatDate(now);\n  }\n\n  input = input.trim();\n\n  // \"x seconds ago\"\n  let match = input.match(/^(\\d+)\\s+seconds?\\s+ago$/i);\n  if (match) {\n    const seconds = Number(match[1]);\n    if (!isNaN(seconds)) {\n      return formatDate(new Date(now.getTime() - seconds * 1000));\n    }\n  }\n\n  // \"x minutes ago\"\n  match = input.match(/^(\\d+)\\s+minutes?\\s+ago$/i);\n  if (match) {\n    const minutes = Number(match[1]);\n    if (!isNaN(minutes)) {\n      return formatDate(new Date(now.getTime() - minutes * 60 * 1000));\n    }\n  }\n\n  // \"x hours ago\"\n  match = input.match(/^(\\d+)\\s+hours?\\s+ago$/i);\n  if (match) {\n    const hours = Number(match[1]);\n    if (!isNaN(hours)) {\n      return formatDate(new Date(now.getTime() - hours * 60 * 60 * 1000));\n    }\n  }\n\n  // \"21 July 2025 at 21:04\"\n  match = input.match(/^(\\d{1,2})\\s+([A-Za-z]+)\\s+(\\d{4})\\s+at\\s+(\\d{2}):(\\d{2})$/i);\n  if (match) {\n    const [ , day, monthName, year, hour, minute ] = match;\n    // Build a string parseable by Date.parse in ISO-ish format with UTC indicator\n    // Example: \"21 July 2025 21:04 UTC\"\n    const dateString = `${day} ${monthName} ${year} ${hour}:${minute} UTC`;\n    const parsedTime = Date.parse(dateString);\n    if (!isNaN(parsedTime)) {\n      return formatDate(new Date(parsedTime));\n    }\n  }\n\n  // fallback\n  return formatDate(now);\n};\n\nfor (const item of $input.all()) {\n  item.json.publishedAt = parseDate(item.json.publishedAt);\n}\n\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1312,
        0
      ],
      "id": "8541ac8a-db2f-4396-b8a3-f2efb6322cc6",
      "name": "Parse and transform date"
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1856,
        336
      ],
      "id": "902cf04d-76cb-4e1e-a375-afe9c702dd86",
      "name": "Merge all sources"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2b75566f-62eb-4145-804a-cfef25ef56bd",
              "name": "source",
              "value": "umuseke",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        352,
        496
      ],
      "id": "7239b2b3-8670-409c-9023-484363dbd9dd",
      "name": "Field \"source\" added"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2b75566f-62eb-4145-804a-cfef25ef56bd",
              "name": "source",
              "value": "yegob",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        352,
        240
      ],
      "id": "34f92a24-4cb2-4761-adf2-be242b35eedb",
      "name": "source field"
    },
    {
      "parameters": {
        "maxItems": 10
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        656,
        0
      ],
      "id": "409747ff-9116-41d3-b664-11e59d41316c",
      "name": "Limit"
    },
    {
      "parameters": {
        "chatId": "1078325397",
        "text": "=OpenAi failed to analyze {{ $json.count_title }} articles. check logs to get more informations ",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3456,
        160
      ],
      "id": "800e5b59-9b48-4d7a-be53-9d579fc1d20a",
      "name": "Send a text message",
      "webhookId": "983f0ebc-7733-4aef-a32d-4fa943b8dd00",
      "executeOnce": false,
      "credentials": {
        "telegramApi": {
          "id": "jFV6TqFbtV8wIdeq",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "title"
            }
          ]
        },
        "options": {
          "outputFormat": "singleItem"
        }
      },
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1.1,
      "position": [
        3200,
        160
      ],
      "id": "30f073d0-346c-4994-a932-a3c37210c29a",
      "name": "Summarize"
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Scrap umuseke",
            "type": "main",
            "index": 0
          },
          {
            "node": "Inyarwanda API Key",
            "type": "main",
            "index": 0
          },
          {
            "node": "Scrap yegob",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inyarwanda API Key": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "extract main HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scrap umuseke": {
      "main": [
        [
          {
            "node": "Field \"source\" added",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scrap yegob": {
      "main": [
        [
          {
            "node": "source field",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Merge all sources",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Parse and transform date",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Rename Keys",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rename Keys": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Merge all sources",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "extract main HTML": {
      "main": [
        [
          {
            "node": "extract article items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extract article items": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extract field for each article": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse and transform date": {
      "main": [
        [
          {
            "node": "Merge all sources",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge all sources": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Field \"source\" added": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "source field": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "extract field for each article",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "8cf84688-c78a-4029-9298-f6e4d7207801",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3c2ea3bfb2b9a0fadba96678c4de047659307b19b3f1509db814606403e17045"
  },
  "id": "LLN73eEtIj7V3rhy",
  "tags": []
}